<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://TheBlackHole12X.github.io/quartz/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://TheBlackHole12X.github.io/quartz/notes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://TheBlackHole12X.github.io/quartz/notes/Descrizione-della-concorrenza/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Descrizione-della-concorrenza/</guid><description>Esecuzione parallela Per eseguire un processo non sequenziale c&amp;rsquo;è la necessità di utilizzare:
Un elaboratore non sequenziale; un linguaggio di programmazione non sequenziale.</description></item><item><title/><link>https://TheBlackHole12X.github.io/quartz/notes/La-comunicazione-tra-processi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/La-comunicazione-tra-processi/</guid><description>Introduzione I processi concorrenti interagiscono tra di loro condividendo risorse comuni. Possiamo individuare due modelli di interazione concorrente:
Modello a memoria comune; Modello a scambio di messaggi.</description></item><item><title/><link>https://TheBlackHole12X.github.io/quartz/notes/Secondo-quadrimestre-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Secondo-quadrimestre-4/</guid><description>Lista argomenti [[notes/Elaborazione concorrente]] [[notes/Elaborazione concorrente#Generalità]] [[notes/Descrizione della concorrenza]]: [[notes/Descrizione della concorrenza#Esecuzione parallela]]; [[notes/Descrizione della concorrenza#fork-join]]; [[notes/Descrizione della concorrenza#cobegin-coend]]; [[notes/La comunicazione tra processi]]: Introduzione; Modello a memoria comune; Modello a scambio di messaggi [[notes/Sincronizzazione tra processi]]: Errori nei programmi concorrenti; Mutua Esclusione e sezione critica; Starvation e deadlock; [[notes/Semafori]]: Premessa; Semafori di basso livello e spinlock; Semaforo di Dijkstra;</description></item><item><title/><link>https://TheBlackHole12X.github.io/quartz/notes/Semafori/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Semafori/</guid><description/></item><item><title/><link>https://TheBlackHole12X.github.io/quartz/notes/Sincronizzazione-tra-processi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Sincronizzazione-tra-processi/</guid><description>Errori nei programmi concorrenti La programmazione concorrente nasconde maggiori insidie della normale programmazione monoprogrammata in quanto introduce la possibilità di commettere errori dipendenti dal tempo, nei confronti dei quali le normali tecniche di debugging non sono efficaci dato che, oltre alla correttezza logica, ai programmi è anche richiesta la correttezza temporale.</description></item><item><title>Elaborazione concorrente</title><link>https://TheBlackHole12X.github.io/quartz/notes/Elaborazione-concorrente/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Elaborazione-concorrente/</guid><description>Generalità Elaborazione Sequenziale vs Elaborazione Concorrente Per elaborazione sequenziale si intende l&amp;rsquo;esecuzione di un programma sequenziale le cui istruzioni vengano eseguite una dopo l&amp;rsquo;altra in un determinato ordine, quindi un&amp;rsquo;operazione deve essere completata prima che inizi una successiva operazione.</description></item><item><title>{{test}}</title><link>https://TheBlackHole12X.github.io/quartz/notes/Test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://TheBlackHole12X.github.io/quartz/notes/Test/</guid><description/></item></channel></rss>